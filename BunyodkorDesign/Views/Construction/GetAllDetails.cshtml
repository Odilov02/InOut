@using Application.Common.Dtos.SpendDtos;
@using Domain.Entities;
@{
    Layout = "_AdminLayout";
}
@model List<Construction>
<br />
<br />
<div class="row py-2">
    <div class="col-6">
        <h1 class="text-center">Umumiy malumotlar </h1>
    </div>
    <div class="col-2 py-2">
        <div class="contianer">
            <div class="form-group">
                <div class="input-group" value=" ">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>
                    <input type="text" id="Search" placeholder="Қидирмоқ..." class="form-control ">
                </div>
            </div>
        </div>
    </div>
    <div class="col-2 py-2">
        <button class="btn btn-success" onclick="exportToExcel()">Йуклаб олиш</button>
    </div>
    <div class="col-2 py-2">
        <a asp-action="GetAllConstruction" asp-controller="Construction" class="btn btn-primary">Orqaga</a>
    </div>
</div>
<br />
<table id="dataTable" class="table table-success table-striped">
    <thead>
        <tr>
            <th scope="col"></th>
            <th class="text-center" scope="col"><span>Nomi</span></th>
            <th class ="text-center" scope="col">Vaqti</th>
            <th class="text-center" scope="col">Shartnoma summa</th>
            <th class="text-center" scope="col"><span>Chiqimi</span></th>
            <th class="text-center" scope="col"><span>Sarf foizi</span></th>
            <th class="text-center"scope="col"><span>Kirimi</span></th>
            <th class="text-center" scope="col"><span>Qoldigi</span></th>
        </tr>
    </thead>
    <tbody>
        @{
            int count = 1;
            foreach (var item in Model)
            {
                string percentage = (((double)item.Spend) / ((double)@item.ContractPrice)*100).ToString("0.0");
                <tr class="Search">
                    <th scope="row">@count</th>
                    <td class="text-center"><span>@item.FullName</span></td>
                    <td class="text-center"><span>@item.CreatedDate.ToString("dd.MM.yyyy")</span></td>
                    <td class="contractPrice text-center"><span id="ContractPrice">@item.ContractPrice</span></td>
                    <td class="outs text-center"><span id="Spend">@item.Spend</span></td>
                    <td class="text-center"><span>@percentage %</span></td>
                    <td class="price text-center"><span id="In">@item.In</span></td>
                    <td class="residual text-center"><span id="formattedNumber">@item.User.Residual</span></td>
                </tr>
                count++;
            }
            <tr class="total-row">
                <th scope="row">Жами</th>
                <td class="text-center">----</td>
                <td class="text-center">----</td>
                <td class="text-center" id="contractPrice"></td>
                <td class="text-center" id="totalOuts"></td>
                <td class="text-center">----</td>
                <td class="text-center" id="totalPrice"></td>
                <td class="text-center" id="totalResidual"></td>
            </tr>
        }
    </tbody>
</table>
<script>
    $(document).ready(function () {
        function contains(text_one, text_two) {
            return text_one.indexOf(text_two) != -1;
        }

        $("#Search").keyup(function () {
            var searchtext = $("#Search").val().toLowerCase();

            var hiddenRows = $(".Search:hidden");

            $("#hiddenRowsContainer").empty(); 
            $("#hiddenRowsContainer").append(hiddenRows);

         

            $(".Search").each(function () {
                if (!contains($(this).text().toLowerCase(), searchtext)) {
                    $(this).hide();
                } else {
                    $(this).show();
                }
            });
            

            var contractPrice = 0;

            $(".Search:visible .contractPrice").each(function () {
                contractPrice += parseFloat($(this).text());
            });

            $("#contractPrice").text(contractPrice);


            var totalAmount = 0;

            $(".Search:visible .price").each(function () {
                var price = parseFloat($(this).text());
                totalAmount += price;
            });

            $("#totalPrice").text(totalAmount);

            var totalOuts = 0;

            $(".Search:visible .outs").each(function () {
                var outs = parseFloat($(this).text());
                totalOuts += outs;
            });

            $("#totalOuts").text(totalOuts);


            var totalResidual = 0;

            $(".Search:visible .residual").each(function () {
                var Residual = parseFloat($(this).text());
                totalResidual += Residual;
            });

            $("#totalResidual").text(totalResidual);
        });
    });
    function exportToExcel() {
        const table = document.getElementById('dataTable');
        const wb = XLSX.utils.table_to_book(table, { sheet: "Sheet1" });
        const wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });

        function s2ab(s) {
            const buf = new ArrayBuffer(s.length);
            const view = new Uint8Array(buf);
            for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;
            return buf;
        }

        const blob = new Blob([s2ab(wbout)], { type: "application/octet-stream" });
        const fileName = "data.xlsx";

        if (window.navigator && window.navigator.msSaveOrOpenBlob) {
            window.navigator.msSaveOrOpenBlob(blob, fileName);
        } else {
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement("a");
            document.body.appendChild(a);
            a.href = url;
            a.download = fileName;
            a.click();
            window.URL.revokeObjectURL(url);
            document.body.removeChild(a);
        }
    }
</script>

