﻿@using Application.Common.Dtos.SpendDtos;
@using Domain.Entities;
@{
    Layout = "_AdminLayout";
}
@model List<Factory>
<br />
<br />
<div class="row py-2">
    <div class="col-6">
        <h2 class="text-center">Умумий маьлумотлар </h2>
    </div>
    <div class="col-2 py-2">
        <div class="contianer">
            <div class="form-group">
                <div class="input-group" value=" ">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>
                    <input type="text" id="Search" placeholder="Қидирмоқ..." class="form-control ">
                </div>
            </div>
        </div>
    </div>
    <div class="col-2 py-2">
        <button class="btn btn-success" onclick="exportToExcel()">Йуклаб олиш</button>
    </div>
    <div class="col-2 py-2">
        <a asp-action="GetAllFactory" asp-controller="Factory" class="btn btn-primary">Орқага</a>
    </div>
</div>
<br />
<table id="dataTable" class="table table-bordered table-success table-striped">
    <thead>
        <tr>
            <th scope="col"></th>
            <th class="text-center" scope="col"><span>Номи</span></th>
            <th class="text-center" scope="col">Вақти</th>
            <th class="text-center" scope="col"><span>Чиқими</span></th>
            <th class="text-center" scope="col"><span>Кирими</span></th>
            <th class="text-center" scope="col"><span>Қолдиги</span></th>
            <th class="text-center" scope="col"><span>Номери</span></th>
        </tr>
    </thead>
    <tbody>
        @{
            int count = 1;
            foreach (var item in Model)
            {
                long residual = item.Spend - item.In;
                <tr class="Search">
                    <th scope="row">@count</th>
                    <td class="text-center"><span>@item.FullName</span></td>
                    <td class="text-center">@item.CreatedDate.ToString("dd.MM.yyyy")</td>
                    <td class="outs text-center"><span id="Spend">@item.Spend</span></td>
                    <td class="price text-center"><span id="In">@item.In</span></td>
                    <td class="residual text-center"><span id="formattedNumber">@residual</span></td>
                    <td class="text-center" id="phoneNumber"></td>
                </tr>
                count++;
            }
            <tr class="total-row">
                <th scope="row">Жами</th>
                <td colspan="2"></td>
                <td class="text-center"><span id="totalOuts"></span></td>
                <td class="text-center"><span id="totalPrice"></span></td>
                <td class="text-center"><span id="totalResidual"></span></td>
                <td colspan="2"></td>
            </tr>
        }
    </tbody>
</table>
<script>

    formatTableNumbers();


    $(document).ready(function () {
        function contains(text_one, text_two) {
            return text_one.indexOf(text_two) != -1;
        }
        $("#Search").on("input", function () {
            var searchtext = $("#Search").val().toLowerCase();

            var hiddenRows = $(".Search:hidden");

            $("#hiddenRowsContainer").empty();
            $("#hiddenRowsContainer").append(hiddenRows);



            $(".Search").each(function () {
                if (!contains($(this).text().toLowerCase(), searchtext)) {
                    $(this).hide();
                } else {
                    $(this).show();
                }
            });

            formatTableNumbers();
        });
    });
    function exportToExcel() {
        const table = document.getElementById('dataTable');
        const wb = XLSX.utils.table_to_book(table, { sheet: "Sheet1" });
        const wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });

        function s2ab(s) {
            const buf = new ArrayBuffer(s.length);
            const view = new Uint8Array(buf);
            for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;
            return buf;
        }

        const blob = new Blob([s2ab(wbout)], { type: "application/octet-stream" });
        const fileName = "data.xlsx";

        if (window.navigator && window.navigator.msSaveOrOpenBlob) {
            window.navigator.msSaveOrOpenBlob(blob, fileName);
        } else {
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement("a");
            document.body.appendChild(a);
            a.href = url;
            a.download = fileName;
            a.click();
            window.URL.revokeObjectURL(url);
            document.body.removeChild(a);
        }
    }
    function formatTableNumbers() {
      
        var totalAmount = 0;

        $(".Search:visible .price").each(function () {
            var price = parseFloat($(this).text().replace(/\s/g, ''));
            totalAmount += price;
        });

        $("#totalPrice").text(totalAmount);

        var totalOuts = 0;

        $(".Search:visible .outs").each(function () {
            var outs = parseFloat($(this).text().replace(/\s/g, ''));
            totalOuts += outs;
        });

        $("#totalOuts").text(totalOuts);


        var totalResidual = 0;

        $(".Search:visible .residual").each(function () {
            var Residual = parseFloat($(this).text().replace(/\s/g, ''));
            totalResidual += Residual;
        });

        $("#totalResidual").text(totalResidual);

        // Qatordan ma'lumotlarni olib olish
        var rows = document.querySelectorAll('tbody tr');

        // Har bir qator uchun
        rows.forEach(function (row) {
            // Har bir ustunni olib olish
            var cells = row.querySelectorAll('td span');

            // Har bir ustunni formatlab berish
            cells.forEach(function (cell) {
                var text = cell.textContent.trim();
                var number = parseFloat(text.replace(/\s/g, '')); // Agar koma orqali ajratilgan sonlar bo'lsa
                if (!isNaN(number)) {
                    cell.textContent = formatNumber(number);
                }
            });
            var cellsNumber = row.querySelectorAll('td p');
            cellsNumber.forEach(function (cell) {
                var number = cell.textContent.trim();
                cell.textContent = formatPhoneNumber(number);
            });
        });
    }

    // Sonlarni formatlab beradigan funksiya
    function formatNumber(number) {
        return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
    }
    function formatPhoneNumber(phoneNumber) {
        return phoneNumber.replace(/(\+998)(\d{2})(\d{3})(\d{2})(\d{2})/, '$1 $2 $3 $4 $5');

    }

</script>